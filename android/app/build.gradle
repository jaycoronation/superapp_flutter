
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}

//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}

//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '12'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '2.1'
//}

//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'kotlin-kapt'

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
    id 'kotlin-kapt'
}


android {
    namespace = "tvs.mob.excelnet.alpha"
    compileSdk = 35
    ndkVersion = '28.0.13004108'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    // Enable core library desugaring
    dexOptions {
        javaMaxHeapSize "4g"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildFeatures {
        dataBinding = true
    }

    defaultConfig {
        applicationId "tvs.mob.excelnet.alpha"
        minSdkVersion 26
        targetSdk 35
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
    }

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}



flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.android.tools:desugar_jdk_libs:2.1.4'  // Or another compatible version
    implementation("androidx.appcompat:appcompat:1.7.0")
    implementation 'androidx.fragment:fragment-ktx:1.8.5'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation("com.github.investwell-tools:mint-android-app:1.1.15alpha")
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-messaging:23.4.1'
    implementation 'com.google.guava:guava:32.0.1-android'
    implementation platform('com.google.firebase:firebase-bom:32.8.1')
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'

}
